from selenium import webdriver
from selenium.webdriver.firefox.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from webdriver_manager.firefox import GeckoDriverManager
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import pytest
from TestData import Data
from TestLocator import Locators
from time import sleep

class TestPIM:
    @pytest.fixture
    def booting_function(self):
        self.driver = webdriver.Firefox(service=Service(GeckoDriverManager().install()))
        self.wait = WebDriverWait(self.driver,20)
        self.driver.maximize_window()
        yield
        self.driver.close()
    
    def test_Search(self,booting_function):
        self.driver.get(Data.DataHRM().url)
        self.wait.until(EC.presence_of_element_located((By.NAME,Locators.LocatorHRM().Username_Locator))).send_keys(Data.DataHRM().Username)
        self.wait.until(EC.presence_of_element_located((By.NAME,Locators.LocatorHRM().Password_Locator))).send_keys(Data.DataHRM().Password)
        self.wait.until(EC.presence_of_element_located((By.XPATH,Locators.LocatorHRM().LoginButtonLocator))).click()
        self.wait.until(EC.presence_of_element_located((By.XPATH,Locators.LocatorHRM().Admin_Locator))).click()
        self.wait.until(EC.element_to_be_clickable((By.XPATH,Locators.LocatorHRM().Search_Locator))).send_keys(Data.DataHRM().Admin_C)
        sleep(3)
        admins = self.driver.find_element(by=By.XPATH,value=Locators.LocatorHRM().Search_Locator)
        admins.send_keys(Keys.BACKSPACE * len(admins.get_attribute("value")))
        sleep(2)
        admins.send_keys(Data.DataHRM().Admin_S)
        sleep(2)
        pimc = self.driver.find_element(by=By.XPATH,value=Locators.LocatorHRM().Search_Locator)
        pimc.send_keys(Keys.BACKSPACE * len(pimc.get_attribute("value")))
        sleep(2)
        pimc.send_keys(Data.DataHRM().PIM_C)
        sleep(2)
        pims = self.driver.find_element(by=By.XPATH,value=Locators.LocatorHRM().Search_Locator)
        pims.send_keys(Keys.BACKSPACE * len(pims.get_attribute("value")))
        sleep(2)
        pims.send_keys(Data.DataHRM().PIM_S)
        sleep(2)
        leavec = self.driver.find_element(by=By.XPATH,value=Locators.LocatorHRM().Search_Locator)
        leavec.send_keys(Keys.BACKSPACE * len(leavec.get_attribute("value")))
        sleep(2)
        leavec.send_keys(Data.DataHRM().Leave_C)
        sleep(2)
        leaves = self.driver.find_element(by=By.XPATH,value=Locators.LocatorHRM().Search_Locator)
        leaves.send_keys(Keys.BACKSPACE * len(leaves.get_attribute("value")))
        sleep(2)
        leaves.send_keys(Data.DataHRM().Leave_S)
        sleep(2)
        timec = self.driver.find_element(by=By.XPATH,value=Locators.LocatorHRM().Search_Locator)
        timec.send_keys(Keys.BACKSPACE * len(timec.get_attribute("value")))
        sleep(2)
        timec.send_keys(Data.DataHRM().Time_C)
        sleep(2)
        times = self.driver.find_element(by=By.XPATH,value=Locators.LocatorHRM().Search_Locator)
        times.send_keys(Keys.BACKSPACE * len(times.get_attribute("value")))
        sleep(2)
        times.send_keys(Data.DataHRM().Time_S)
        sleep(2)
        recc = self.driver.find_element(by=By.XPATH,value=Locators.LocatorHRM().Search_Locator)
        recc.send_keys(Keys.BACKSPACE * len(recc.get_attribute("value")))
        sleep(2)
        recc.send_keys(Data.DataHRM().Recruitment_C)
        sleep(2)
        recs = self.driver.find_element(by=By.XPATH,value=Locators.LocatorHRM().Search_Locator)
        recs.send_keys(Keys.BACKSPACE * len(recs.get_attribute("value")))
        sleep(2)
        recs.send_keys(Data.DataHRM().Recruitment_S)
        sleep(2)
        myinc = self.driver.find_element(by=By.XPATH,value=Locators.LocatorHRM().Search_Locator)
        myinc.send_keys(Keys.BACKSPACE * len(myinc.get_attribute("value")))
        sleep(2)
        myinc.send_keys(Data.DataHRM().MyInfo_C)
        sleep(2)
        myins = self.driver.find_element(by=By.XPATH,value=Locators.LocatorHRM().Search_Locator)
        myins.send_keys(Keys.BACKSPACE * len(myins.get_attribute("value")))
        sleep(2)
        myins.send_keys(Data.DataHRM().MyInfo_S)
        sleep(2)
        perfc = self.driver.find_element(by=By.XPATH,value=Locators.LocatorHRM().Search_Locator)
        perfc.send_keys(Keys.BACKSPACE * len(perfc.get_attribute("value")))
        sleep(2)
        perfc.send_keys(Data.DataHRM().Performance_C)
        sleep(2)
        perfs = self.driver.find_element(by=By.XPATH,value=Locators.LocatorHRM().Search_Locator)
        perfs.send_keys(Keys.BACKSPACE * len(perfs.get_attribute("value")))
        sleep(2)
        perfs.send_keys(Data.DataHRM().Performance_S)
        sleep(2)
        dashc = self.driver.find_element(by=By.XPATH,value=Locators.LocatorHRM().Search_Locator)
        dashc.send_keys(Keys.BACKSPACE * len(dashc.get_attribute("value")))
        sleep(2)
        dashc.send_keys(Data.DataHRM().Dashboard_C)
        sleep(2)
        dashs = self.driver.find_element(by=By.XPATH,value=Locators.LocatorHRM().Search_Locator)
        dashs.send_keys(Keys.BACKSPACE * len(dashs.get_attribute("value")))
        sleep(2)
        dashs.send_keys(Data.DataHRM().Dashboard_S)
        sleep(2)
        dirc = self.driver.find_element(by=By.XPATH,value=Locators.LocatorHRM().Search_Locator)
        dirc.send_keys(Keys.BACKSPACE * len(dirc.get_attribute("value")))
        sleep(2)
        dirc.send_keys(Data.DataHRM().Directory_C)
        sleep(2)
        dirs = self.driver.find_element(by=By.XPATH,value=Locators.LocatorHRM().Search_Locator)
        dirs.send_keys(Keys.BACKSPACE * len(dirs.get_attribute("value")))
        sleep(2)
        dirs.send_keys(Data.DataHRM().Directory_S)
        sleep(2)
        mainc = self.driver.find_element(by=By.XPATH,value=Locators.LocatorHRM().Search_Locator)
        mainc.send_keys(Keys.BACKSPACE * len(mainc.get_attribute("value")))
        sleep(2)
        mainc.send_keys(Data.DataHRM().Maintenance_C)
        sleep(2)
        mains = self.driver.find_element(by=By.XPATH,value=Locators.LocatorHRM().Search_Locator)
        mains.send_keys(Keys.BACKSPACE * len(mains.get_attribute("value")))
        sleep(2)
        mains.send_keys(Data.DataHRM().Maintenance_S)
        sleep(2)
        buzzc = self.driver.find_element(by=By.XPATH,value=Locators.LocatorHRM().Search_Locator)
        buzzc.send_keys(Keys.BACKSPACE * len(buzzc.get_attribute("value")))
        sleep(2)
        buzzc.send_keys(Data.DataHRM().Buzz_C)
        sleep(2)
        buzzs = self.driver.find_element(by=By.XPATH,value=Locators.LocatorHRM().Search_Locator)
        buzzs.send_keys(Keys.BACKSPACE * len(buzzs.get_attribute("value")))
        sleep(2)
        buzzs.send_keys(Data.DataHRM().Buzz_S)
        sleep(3)
        assert self.driver.title == 'OrangeHRM'
        print('SUCCESS : The Search box validation is done and the individual menu name are displayed while searching with both upper and lower case')